apiVersion: v1
kind: Service
metadata:
  name: scala3-http4s-http
spec:
  ports:
  - name: "8080"
    port: 8080
    targetPort: 8080
  selector:
    app: scala3-http4s
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: scala3-http4s
  name: scala3-http4s-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: scala3-http4s
  template:
    metadata:
      annotations:
        linkerd.io/inject: enabled
      labels:
        app: scala3-http4s
    spec:
      containers:
      - image: oen9/scala3-http4s:0.1.3
        name: scala3-http4s
        livenessProbe: # restart after fail
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 30
        readinessProbe: # don't use when fail and wait for recover
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 30
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: my-data
          mountPath: /data
      restartPolicy: Always
      volumes:
      - name: my-data
        persistentVolumeClaim:
          claimName: my-pvc
---
